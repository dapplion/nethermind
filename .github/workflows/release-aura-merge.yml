name: "[RELEASE] Nethermind Aura merge"

on:
  push:
    branches:
      - merge_aura-merged

permissions:
  deployments: write
  packages: write
  contents: write

jobs:
  build-nethermind:
    name: Building Nethermind Packages
    runs-on: ubuntu-latest
    env:
      RELEASE_DIRECTORY: /home/runner/work/nethermind/nethermind
      LIN_RELEASE: nethermind-lin-x64
      OSX_RELEASE: nethermind-osx-x64
      WIN_RELEASE: nethermind-win-x64
      LIN_ARM64_RELEASE: nethermind-lin-arm64
      OSX_ARM64_RELEASE: nethermind-osx-arm64
      LINUX: linux-x64
      OSX: osx-x64
      WIN10: win10-x64
      LINUX_ARM64: linux-arm64
      OSX_ARM64: osx-arm64
    steps:
      - name: Checking out Nethermind repository
        uses: actions/checkout@master
        with:
          submodules: recursive
          path: nethermind
          ref: ${{ github.event.inputs.tag }}
          fetch-depth: 0
      - name: Checking out Nethermind Launcher repository
        uses: actions/checkout@master
        with:
          repository: NethermindEth/nethermind.launcher
          path: launcher
      - name: Setting up Node.js
        uses: actions/setup-node@master
        with:
          node-version: "14"
      - name: Setting up Build Environment
        run: |
          npm i pkg @vercel/ncc -g
      - name: Setting up dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"
      - name: Setting up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setting up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Setting up Packages
        run: ./nethermind/scripts/deployment/setup-packages.sh
      - name: Building Runner
        run: ./nethermind/scripts/deployment/build-runner.sh
      - name: Building Cli
        run: ./nethermind/scripts/deployment/build-cli.sh
      - name: Building Launcher
        run: ./nethermind/scripts/deployment/build-launcher.sh
      - name: Building Launcher for arm64
        run: |
          cd nethermind/
          docker buildx build --platform=linux/arm64 -t tmp-launcher -f Dockerfile.launcher . --load
          docker run --platform=linux/arm64 -v $PWD:/opt/mount --rm tmp-launcher bash -c "cp /nethermind/Nethermind.Launcher /opt/mount/"
          mv Nethermind.Launcher ${{ env.RELEASE_DIRECTORY }}/${{ env.LIN_ARM64_RELEASE }}/Nethermind.Launcher
      - name: Archiving packages
        run: ./nethermind/scripts/deployment/archive-packages.sh
      - uses: actions/upload-artifact@master
        name: Uploading Nethermind darwin package
        with:
          name: nethermind-darwin-package
          path: ${{ env.RELEASE_DIRECTORY }}/${{ env.OSX_RELEASE }}/nethermind-darwin-amd64-*
      - uses: actions/upload-artifact@master
        name: Uploading Nethermind linux package
        with:
          name: nethermind-linux-package
          path: ${{ env.RELEASE_DIRECTORY }}/${{ env.LIN_RELEASE }}/nethermind-linux-amd64-*
      - uses: actions/upload-artifact@master
        name: Uploading Nethermind windows package
        with:
          name: nethermind-windows-package
          path: ${{ env.RELEASE_DIRECTORY }}/${{ env.WIN_RELEASE }}/nethermind-windows-amd64-*
      - uses: actions/upload-artifact@master
        name: Uploading Nethermind linux arm64 package
        with:
          name: nethermind-linux-arm64-package
          path: ${{ env.RELEASE_DIRECTORY }}/${{ env.LIN_ARM64_RELEASE }}/nethermind-linux-arm64-*
      - uses: actions/upload-artifact@master
        name: Uploading Nethermind darwin arm64 package
        with:
          name: nethermind-darwin-arm64-package
          path: ${{ env.RELEASE_DIRECTORY }}/${{ env.OSX_ARM64_RELEASE }}/nethermind-darwin-arm64-*

  trigger-publish:
    name: Triggering publish event to different sources
    runs-on: ubuntu-latest
    needs: build-nethermind
    environment:
      name: Releases
      url: https://github.com/NethermindEth/nethermind/releases/tag/${{ github.event.inputs.tag }}
    steps:
      - run: echo "Just a middle-man job"

  publish-dockers:
    name: Publishing Docker images to Docker Hub
    runs-on: ubuntu-latest
    needs: trigger-publish
    steps:
      - name: Checking out Nethermind repository
        uses: actions/checkout@master
        with:
          ref: ${{ github.event.inputs.tag }}
          fetch-depth: 0
      - name: Settings
        id: settings
        run: |
          echo ::set-output name=TAG::$(git describe --tags --abbrev=0)
      - name: Setting up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setting up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Logging to Docker Hub
        if: success()
        env:
          DOCKERHUB_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
        run: |
          echo "${DOCKERHUB_ACCESS_TOKEN}" | docker login --username dapplion --password-stdin
      - name: Building & Pushing image to docker registry  (patch)
        run: |
          docker buildx build --platform=linux/amd64,linux/arm64 -t "dapplion/nethermind:aura_merge" -f Dockerfile --build-arg GIT_COMMIT=$(git log -1 --format=%h) . --push
      - name: Clearing
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
